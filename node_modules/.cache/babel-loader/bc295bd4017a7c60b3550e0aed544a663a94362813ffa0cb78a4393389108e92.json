{"ast":null,"code":"import React,{useState,useEffect}from'react';import{toast}from'react-toastify';import'bootstrap/dist/css/bootstrap.css';import'react-toastify/dist/ReactToastify.css';import SongForm from'../Components/SongForm';import{setDocumentTitle}from'../utils';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function LyricsLog(){useEffect(()=>{setDocumentTitle('Add New Song');},[]);const[formData,setFormData]=useState({title:'',artist:'',genre:'',lyrics:'',playlist:'morning vibe',isFavorite:false});const[errors,setErrors]=useState({});const validateForm=()=>{const newErrors={};if(!formData.title.trim())newErrors.title='Song title is required';if(!formData.artist.trim())newErrors.artist='Artist name is required';// Updated error message\nif(!formData.genre)newErrors.genre='Genre is required';if(!formData.lyrics.trim())newErrors.lyrics='Lyrics are required';setErrors(newErrors);return Object.keys(newErrors).length===0;};//POST\nconst handleSubmit=async e=>{e.preventDefault();if(validateForm()){try{const response=await fetch('http://localhost:3001/songs',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(formData)});if(response.ok){toast.success('Song added successfully!');// Clear form\nsetFormData({title:'',artist:'',genre:'',lyrics:'',playlist:'morning vibe',isFavorite:false});window.location.href='/songbook';}else{throw new Error('Failed to add song');}}catch(error){toast.error('Error adding song. Please try again.');}}};return/*#__PURE__*/_jsxs(\"div\",{className:\"container mt-4\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Add New Song\"}),/*#__PURE__*/_jsx(SongForm,{formData:formData,setFormData:setFormData,handleSubmit:handleSubmit,errors:errors,buttonText:\"Publish\"})]});}","map":{"version":3,"names":["React","useState","useEffect","toast","SongForm","setDocumentTitle","jsx","_jsx","jsxs","_jsxs","LyricsLog","formData","setFormData","title","artist","genre","lyrics","playlist","isFavorite","errors","setErrors","validateForm","newErrors","trim","Object","keys","length","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","success","window","location","href","Error","error","className","children","buttonText"],"sources":["/Users/mavix/Desktop/React ITP 404/final-project/src/Pages/LyricsLog.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { toast } from 'react-toastify'\nimport 'bootstrap/dist/css/bootstrap.css'\nimport 'react-toastify/dist/ReactToastify.css'\nimport SongForm from '../Components/SongForm'\nimport { setDocumentTitle } from '../utils'\n\nexport default function LyricsLog() {\n  useEffect(() => {\n    setDocumentTitle('Add New Song');\n  }, []);\n  \n  const [formData, setFormData] = useState({\n    title: '',\n    artist: '',\n    genre: '',\n    lyrics: '',\n    playlist: 'morning vibe',\n    isFavorite: false\n  });\n  const [errors, setErrors] = useState({});\n\n  const validateForm = () => {\n    const newErrors = {}\n    if (!formData.title.trim()) newErrors.title = 'Song title is required'\n    if (!formData.artist.trim()) newErrors.artist = 'Artist name is required'  // Updated error message\n    if (!formData.genre) newErrors.genre = 'Genre is required'\n    if (!formData.lyrics.trim()) newErrors.lyrics = 'Lyrics are required'\n    setErrors(newErrors)\n    return Object.keys(newErrors).length === 0\n  }\n\n  //POST\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n    if (validateForm()) {\n      try {\n        const response = await fetch('http://localhost:3001/songs', {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify(formData)\n        })\n\n        if (response.ok) {\n          toast.success('Song added successfully!')\n          // Clear form\n          setFormData({\n            title: '',\n            artist: '',\n            genre: '',\n            lyrics: '',\n            playlist: 'morning vibe',\n            isFavorite: false\n          })\n          window.location.href = '/songbook'\n        } else {\n          throw new Error('Failed to add song')\n        }\n      } catch (error) {\n        toast.error('Error adding song. Please try again.')\n      }\n    }\n  }\n\n  return (\n    <div className=\"container mt-4\">\n    <h1>Add New Song</h1>\n    <SongForm \n      formData={formData}\n      setFormData={setFormData}\n      handleSubmit={handleSubmit}\n      errors={errors}\n      buttonText=\"Publish\"\n    />\n  </div>\n);\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}