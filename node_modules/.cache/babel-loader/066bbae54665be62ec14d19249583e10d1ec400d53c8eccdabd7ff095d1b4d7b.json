{"ast":null,"code":"var _jsxFileName = \"/Users/mavix/Desktop/React ITP 404/final-project/src/Pages/SongDetails.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport SongForm from '../Components/SongForm';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SongDetails() {\n  _s();\n  const [song, setSong] = useState(null);\n  const [isEditing, setIsEditing] = useState(false);\n  const [hasLoaded, setHasLoaded] = useState(false);\n  const [editForm, setEditForm] = useState({\n    title: '',\n    artist: '',\n    genre: '',\n    lyrics: '',\n    playlist: 'morning vibe',\n    isFavorite: false\n  });\n  const [errors, setErrors] = useState({});\n  const songId = window.location.pathname.split('/').pop();\n  const loadSongDetails = () => {\n    fetch(`http://localhost:3001/songs/${songId}`).then(response => {\n      if (!response.ok) throw new Error('Song not found');\n      return response.json();\n    }).then(data => {\n      setSong(data);\n      setEditForm(data);\n    }).catch(error => {\n      toast.error('Failed to load song details');\n    });\n  };\n  if ((song === null || song === void 0 ? void 0 : song.id) !== songId) {\n    loadSongDetails();\n  }\n  if (!hasLoaded) {\n    setHasLoaded(true);\n    fetch(`http://localhost:3001/songs/${songId}`).then(response => {\n      if (!response.ok) throw new Error('Song not found');\n      return response.json();\n    }).then(data => {\n      setSong(data);\n      setEditForm(data);\n    }).catch(error => {\n      toast.error('Failed to load song details');\n    });\n  }\n  const handleEditSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch(`http://localhost:3001/songs/${songId}`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(editForm)\n      });\n      if (!response.ok) throw new Error('Failed to update song');\n      const updatedSong = await response.json();\n      setSong(updatedSong);\n      setIsEditing(false);\n      toast.success('Changes saved successfully! 🎵');\n    } catch (error) {\n      toast.error('Failed to save changes. Please try again.');\n    }\n  };\n  if (!song && !isEditing) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-3\",\n      children: \"Loading song details...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: song && !isEditing ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: song.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Genre: \", song.genre]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Artist: \", song.artist]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Playlist: \", song.playlist]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), song.isFavorite && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-danger\",\n          children: \"\\u2764\\uFE0F Favorite\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 41\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Lyrics:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n            className: \"mt-2\",\n            style: {\n              whiteSpace: 'pre-wrap'\n            },\n            children: song.lyrics\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary mt-3 me-2\",\n          onClick: () => setIsEditing(true),\n          children: \"Edit Song\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-secondary mt-3\",\n          onClick: () => window.history.back(),\n          children: \"Back to Songbook\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this) : isEditing ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Edit Song\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(SongForm, {\n          formData: editForm,\n          setFormData: setEditForm,\n          handleSubmit: handleEditSubmit,\n          errors: errors,\n          buttonText: \"Save Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-secondary mt-3\",\n          onClick: () => setIsEditing(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this) : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n}\n_s(SongDetails, \"TFTobxdjNcu0it0t0dipc9KkG4I=\");\n_c = SongDetails;\nvar _c;\n$RefreshReg$(_c, \"SongDetails\");","map":{"version":3,"names":["React","useState","toast","SongForm","jsxDEV","_jsxDEV","SongDetails","_s","song","setSong","isEditing","setIsEditing","hasLoaded","setHasLoaded","editForm","setEditForm","title","artist","genre","lyrics","playlist","isFavorite","errors","setErrors","songId","window","location","pathname","split","pop","loadSongDetails","fetch","then","response","ok","Error","json","data","catch","error","id","handleEditSubmit","e","preventDefault","method","headers","body","JSON","stringify","updatedSong","success","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","whiteSpace","onClick","history","back","formData","setFormData","handleSubmit","buttonText","_c","$RefreshReg$"],"sources":["/Users/mavix/Desktop/React ITP 404/final-project/src/Pages/SongDetails.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport SongForm from '../Components/SongForm';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport default function SongDetails() {\n    const [song, setSong] = useState(null);\n    const [isEditing, setIsEditing] = useState(false);\n    const [hasLoaded, setHasLoaded] = useState(false);\n    const [editForm, setEditForm] = useState({\n        title: '',\n        artist: '',\n        genre: '',\n        lyrics: '',\n        playlist: 'morning vibe',\n        isFavorite: false\n      });\n    const [errors, setErrors] = useState({});\n    const songId = window.location.pathname.split('/').pop();\n    const loadSongDetails = () => {\n        fetch(`http://localhost:3001/songs/${songId}`)\n            .then(response => {\n                if (!response.ok) throw new Error('Song not found');\n                return response.json();\n            })\n            .then(data => {\n                setSong(data);\n                setEditForm(data);\n            })\n            .catch(error => {\n                toast.error('Failed to load song details');\n            });\n    };\n\n    if (song?.id !== songId) {\n        loadSongDetails();\n    }\n\n    if (!hasLoaded) {\n        setHasLoaded(true); \n        fetch(`http://localhost:3001/songs/${songId}`)\n            .then(response => {\n                if (!response.ok) throw new Error('Song not found');\n                return response.json();\n            })\n            .then(data => {\n                setSong(data);\n                setEditForm(data);\n            })\n            .catch(error => {\n                toast.error('Failed to load song details');\n            });\n    }\n\n\n\n  const handleEditSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await fetch(`http://localhost:3001/songs/${songId}`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(editForm)\n      });\n\n      if (!response.ok) throw new Error('Failed to update song');\n      const updatedSong = await response.json();\n      setSong(updatedSong);\n      setIsEditing(false);\n      toast.success('Changes saved successfully! 🎵');\n    } catch (error) {\n      toast.error('Failed to save changes. Please try again.');\n    }\n};\n\n\n\nif (!song && !isEditing) {\n    return <div className=\"mt-3\">Loading song details...</div>;\n}\n\n  \n  return (\n    <div>\n        {song && !isEditing ? (\n            <div className=\"card\">\n                <div className=\"card-body\">\n                    <h2>{song.title}</h2>\n                    <p>Genre: {song.genre}</p>\n                    <p>Artist: {song.artist}</p>\n                    <p>Playlist: {song.playlist}</p>\n                    {song.isFavorite && <p className=\"text-danger\">❤️ Favorite</p>}\n                    \n                    <div className=\"mt-3\">\n                        <strong>Lyrics:</strong>\n                        <pre className=\"mt-2\" style={{ whiteSpace: 'pre-wrap' }}>\n                            {song.lyrics}\n                        </pre>\n                    </div>\n                    \n                    <button\n                        className=\"btn btn-primary mt-3 me-2\"\n                        onClick={() => setIsEditing(true)}\n                    >\n                        Edit Song\n                    </button>\n                    <button\n                        className=\"btn btn-secondary mt-3\"\n                        onClick={() => window.history.back()}\n                    >\n                        Back to Songbook\n                    </button>\n                </div>\n            </div>\n        ) : isEditing ? (\n            <div className=\"card\">\n                <div className=\"card-body\">\n                    <h3>Edit Song</h3>\n                    <SongForm \n                        formData={editForm}\n                        setFormData={setEditForm}\n                        handleSubmit={handleEditSubmit}\n                        errors={errors}\n                        buttonText=\"Save Changes\"\n                    />\n                    <button\n                        className=\"btn btn-secondary mt-3\"\n                        onClick={() => setIsEditing(false)}\n                    >\n                        Cancel\n                    </button>\n                </div>\n            </div>\n        ) : null}\n    </div>\n);\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}