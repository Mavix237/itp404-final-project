{"ast":null,"code":"var _jsxFileName = \"/Users/mavix/Desktop/React ITP 404/final-project/src/Pages/SongDetails.jsx\",\n  _s = $RefreshSig$();\n// SongDetails.jsx\nimport React, { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SongDetails() {\n  _s();\n  const [song, setSong] = useState(null);\n  // Get the id from the URL\n  const songId = window.location.pathname.split('/').pop();\n  const fetchSongDetails = async () => {\n    try {\n      const response = await fetch(`http://localhost:3001/songs/${songId}`);\n      if (!response.ok) throw new Error('Song not found');\n      const data = await response.json();\n      setSong(data);\n    } catch (error) {\n      toast.error('Failed to load song details');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !song ? /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: fetchSongDetails,\n      children: \"Load Song Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"card-title\",\n          children: song.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n          className: \"card-subtitle mb-2 text-muted\",\n          children: [\"Genre: \", song.genre]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-text\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Artist ID:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this), \" \", song.artistId, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 58\n          }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Playlist:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this), \" \", song.playlist, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 57\n          }, this), song.isFavorite && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-danger\",\n            children: \"\\u2764\\uFE0F Favorite\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 35\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-text mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Lyrics:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 39\n          }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n            className: \"mt-2\",\n            style: {\n              whiteSpace: 'pre-wrap'\n            },\n            children: song.lyrics\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-secondary\",\n          onClick: () => window.location.href = '/songbook',\n          children: \"Back to Songbook\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(SongDetails, \"aLNpXVIpF/wdWhzEh/QVu5n+Rzg=\");\n_c = SongDetails;\nvar _c;\n$RefreshReg$(_c, \"SongDetails\");","map":{"version":3,"names":["React","useState","toast","jsxDEV","_jsxDEV","SongDetails","_s","song","setSong","songId","window","location","pathname","split","pop","fetchSongDetails","response","fetch","ok","Error","data","json","error","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","title","genre","artistId","playlist","isFavorite","style","whiteSpace","lyrics","href","_c","$RefreshReg$"],"sources":["/Users/mavix/Desktop/React ITP 404/final-project/src/Pages/SongDetails.jsx"],"sourcesContent":["// SongDetails.jsx\nimport React, { useState } from 'react';\nimport { toast } from 'react-toastify';\n\nexport default function SongDetails() {\n  const [song, setSong] = useState(null);\n  // Get the id from the URL\n  const songId = window.location.pathname.split('/').pop();\n\n  const fetchSongDetails = async () => {\n    try {\n      const response = await fetch(`http://localhost:3001/songs/${songId}`);\n      if (!response.ok) throw new Error('Song not found');\n      const data = await response.json();\n      setSong(data);\n    } catch (error) {\n      toast.error('Failed to load song details');\n    }\n  };\n\n  return (\n    <div>\n      {!song ? (\n        <button \n          className=\"btn btn-primary\" \n          onClick={fetchSongDetails}\n        >\n          Load Song Details\n        </button>\n      ) : (\n        <div className=\"card\">\n          <div className=\"card-body\">\n            <h3 className=\"card-title\">{song.title}</h3>\n            <h6 className=\"card-subtitle mb-2 text-muted\">Genre: {song.genre}</h6>\n            <p className=\"card-text\">\n              <strong>Artist ID:</strong> {song.artistId}<br />\n              <strong>Playlist:</strong> {song.playlist}<br />\n              {song.isFavorite && <span className=\"text-danger\">❤️ Favorite</span>}\n            </p>\n            <div className=\"card-text mb-3\">\n              <strong>Lyrics:</strong><br />\n              <pre className=\"mt-2\" style={{ whiteSpace: 'pre-wrap' }}>\n                {song.lyrics}\n              </pre>\n            </div>\n            <button\n              className=\"btn btn-secondary\"\n              onClick={() => window.location.href = '/songbook'}\n            >\n              Back to Songbook\n            </button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}